function Y = NewMexico_readoutput(output_dir,P)

switch P.FixedParameters.QoI

    % return output depending on the QoI we are interested in
    case 'Power'
        filename = fullfile(output_dir,'AeroPower.dat'); % location of the AeroPower.dat output file
        [Times,Azimuthdeg,PowerWatt,Axial_ForceN] = AeroPower(filename); %, P{23}, P{24});
        Y = mean(PowerWatt);
        
    case 'Axial_Force' % axial force of the rotor
        filename = fullfile(output_dir,'AeroPower.dat'); % location of the AeroPower.dat output file
        [Times,Azimuthdeg,PowerWatt,Axial_ForceN] = AeroPower(filename); %, P{23}, P{24});
        Y = mean(Axial_ForceN);
        
        
        % (trial)
    case 'Axial_Force_Blade'
        % in this case, the cumulative axial force of a blade (1,2 or 3) will be read 
        filename = fullfile(output_dir,'AeroOutput.txt'); % location of the AeroPower.dat output file
        V = readtable(filename,"ReadVariableNames",true,...
            "PreserveVariableNames",true); %, P{23}, P{24});
        f = V{:,12};
        f_mean = mean(f);
        Y = f_mean;
        
        
    case 'Sectional_normal_force'   
        % in this case the QoI is a vector, returning the time-averaged force at
        % each section
        filename = fullfile(output_dir,'B1n_BEM.txt');
        
        % Read output data generated by AeroModule
        D = readtable(filename,'HeaderLines', 4,"ReadVariableNames",true,...
            "PreserveVariableNames",true); % Reads the variable data from the 
                                           % specified .txt file
        % column 1 is time, 
        % column 2 is azimuth,
        % columns 3:end correspond to different radial locations
        Fn = D{:,3:end};                                               
        Fn_mean = mean(Fn,1); % Mean (average in time) values at different radial stations
        
        
        % Radial stations   
        r_sim = str2double(D.Properties.VariableNames(3:end)); 
        % the radial stations are expressed in % of the blade length,
        % excluding the hub radius
        % to compare to experiments, add the hub radius:
        r_sim = r_sim + 0.21;
        
        % Locations of experimental data
        % These values are made available from NewMexico: 
        r_exp = P.FixedParameters.r_exp; %2.25*[0.25 0.35 0.6 0.82 0.92]; % Measurement radial stations in percentage of blade length
        
        % Interpolation
        % These values are made available from NewMexico: 
        r_i = 2.25*[0.25 0.35 0.6 0.82 0.92]; % Measurement radial stations in percentage of blade length
        Y   = spline(r_sim,Fn_mean,r_exp); % Interpolated data using spline
        
    otherwise
        error(strcat('QoI type unknown; check the turbine file ',P{29}));
        
end